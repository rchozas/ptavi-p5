Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:

* ¿Cuántos paquetes componen la captura?
    La captura esta compuesta por 954 paquetes.

* ¿Cuánto tiempo dura la captura?
    La captura dura 56.149345 segundos

* ¿Qué IP tiene la máquina donde se ha efectuado la captura? 

    La IP de la máquina donde se ha efectuado la captura es 192.168.1.34.

¿Se trata de una IP pública o de una IP privada? 

    Se trata de una IP privada.

¿Por qué lo sabes?
    
    Sabemos que se trata de una IP privada porque se encuentra dentro del rango
     de la clase C de redes privadas IPv4 (192.168.0.0 - 192.168.255.255).


3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen 
en el menú de Statistics. En el apartado de jerarquı́a de protocolos 
(Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al
 protocolo TCP y UDP.

* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?

    - El porcentaje de trafico es mucho mayor en el protocolo UDP que en TCP.
        UDP tiene un porcentaje de paquetes del 96.2.
        TCP tiene un porcentaje de paquetes del 2.1.
        
    - Si que tiene sentido si hablamos de una aplicacion que transmite en 
    tiempo real, ya que TCP aporta fiabilidad y por ello no es bueno
    para este tipo de aplicaciones. 
    
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?

    Aparte de TCP y UDP, podemos ver otros protocolos como: 
        - IP (Internet Protocol Version 4)
        - DNS (Domain Name Service)
        - STUN (Simple Traversal of UDP Through NAT)
        - SIP (Session Initiation Protocol)
        - RTP (Real-Time Transport Control Protocol)
        - H.261
        - RTCP (Real-time Transport Control Protocol)
        - HTTP (Hypertext Transfer Protocol)
        - ICMP (Internet Control Message Protocol)
        - ARP (Address Resolution Protocol)
¿Cuales crees que son señal y cuales ruido?

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.

* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
    Los envios de paquetes SIP tienen lugar en los segundos: 
    7.343770, 7.425202, 7.427990, 7.512211, 7.567714, 7.648107, 14.426793, 
    14.599871, 14.610573, 16.233522. 16.334756, 16.343704, 16.460741, 
    38.119195, 8.362649, 8.362673, 38.937875, 39.154151, 39.178064, 39.204022,
    39.229683, 55.694378, 55.774638, 55.776662, 55.859934

* Y los paquetes con RTP, ¿cuándo se envı́an?
 Los paquetes RTP se envian entre los segundos 17.169770 y 38.119177.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.

* ¿Qué servicio es el utilizado en estas tramas?
    El servicio utilizado es ekiga.net
    
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
    La dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga 
    es 80.58.61.250 
    
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.

* ¿Podrı́as decir la URL que se está pidiendo?
    URL que se esta pidiendo es http://ekiga.net/ip/
    
* ¿Qué user agent (UA) la está pidiendo?
    User-Agent: Ekiga
    
* ¿Qué devuelve el servidor?
    El servidor devuelve un 200 OK, y la IP pública 83.36.48.212
    
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la 
misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el 
servidor?
    Estamos recibiendo la IP pública que tiene nuestro ordenador. Lo que sucede
    es que el servidor responde al cliente con la dirección IP pública para que
    este pueda comunicarse con otras redes sin problema.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.

* ¿Por qué se hace uso de este protocolo?
    STUN (Session Traversal Utilities for NAT) es un protocolo de red del tipo
    cliente/servidor que permite a clientes NAT encontrar su dirección IP 
    pública, el tipo de NAT en el que se encuentra y el puerto de internet 
    asociado con el puerto local a traves de NAT. Esta información es usada para
    configurar una comunicacion UDP entre dos hosts que se encuentren 
    tras enrutadores NAT.
          
* ¿Podrı́as decir si estamos tras un NAT o no?
    Si, nos encontramos tras un NAT. (STUN)

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, 
lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.

* ¿Qué dirección IP tiene el servidor Registrar?
    El servidor Registrar tiene la IP 86.64.162.35.

* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes SIP?
    Los paquetes SIP se envian al puerto 5060.
    
* ¿Qué método SIP utiliza el UA para registrarse?
    El metodo REGISTER.
    
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
    En el campo SIP, en Message Header/Contact/Allow, podemos ver las 
    instrucciones SIP que entiende el UA. Estas son: 
    INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:

* ¿Se registra con éxito en el primer intento?
    En el primer intento no se registra con exito ya que en el paquete 50 
    podemos ver como el servidor envia como respuesta un 401 Unauthorized. 
    Esto indica que el cliente se debe identificar para que el registro se 
    realice con exito.

* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Sabemos que el registro se ha realizado correctamente cuando el servidor 
    responde con un 200 OK, (en la captura lo podemos ver en el paquete 54).
    
* ¿Podrı́as identificar las diferencias entre el primer intento y el segundo de
 registro? (fı́jate en el tamaño de los paquetes y mira a qué se debe el cambio)
    En el primer intento de registro se envian 523 bytes mientras que en el segundo intento se envian 712 bytes.
    El primer intento de registro es fallido puesto que que el servidor responde 
    con un 401 Unauthorized, lo que significa que el cliente se tiene que identificar.
     
    En el segundo intento de registro el cliente ya añade la linea:
    Authorization: Digest username="grex", realm="ekiga.net", nonce="45a439ee7438aaea43ae8c7c2382922187f86c8b", uri="sip:ekiga.net", algorithm=md5, response="5267d4e49d707d4443baefa913e8ff90" lo que hace que el registro se realice con exito y el servidor responda con el 200 OK.
    
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
    3600 segundos
    
10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca. 

* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
    Puede verse el nombre de quien efectua la llamada dentro de SIP, 
    en el campo from, "Gregorio Robles" y su direccion SIP es grex@ekiga.net.
    
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    SIP/Message Body aqui podemos ver que se usa el protocolo SDP 
    (Session Description Protocol), contiene informacion de la sesion.
    
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    El primer INVITE no tiene exito puesto que se obtiene la respuesta 407 Proxy
    Authentication Required (paquete 85 de la captura). Lo que nos indica esta
    respuesta es que el servidor proxy requiere que se autentifique. A parte de
    esto podemos ver que en el paquete 103 se envia de nuevo otro INVITE, 
    lo cual nos esta confirmando que el primer INVITE no tuvo exito.

* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
    El segundo INVITE se diferencia del primero en el tamaño del paquete ya 
    que en el primero se envian 982 bytes mientras que en el segundo se envian
    1181 bytes. Esto se debe a que en el segundo segundo INVITE se incluye el 
    campo Proxy-Authorization.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    Los protocolos que se usan son RTP, H.261, RTCP, ARP.
    
    - RTP: -Real-time Transport Protocol- (protocolo de transporte en tiempo real)
     es un protocolo de nivel de sesion utilizado para la transmision de información
     en tiempo real, como por ejemplo el audio y video en una video-conferencia.
     Es decir, un protocolo que se encarga del transporte de tráfico multimedia en internet.

    - H.261: diseñado para la compresion de audio, video y videoconferencias.
    
    - RTCP: El protocolo RTCP (Rel-time Transport Control Protocol) es utilizado
     para enviar datos de control entre el emisor y receptor de una secuencia RTP.
     Los paquetes RTCP son enviados aproximadamente cada cinco segundos, 
     y contienen datos que ayudan a verificar las condiciones de transmisión en el extremo remoto.

    - ARP: El protocolo ARP (Address Resolution Protocol) es un protocolo de comunicaciones
     de la capa de enlace de datos, responsable de encontrar la dirección de hardware (Ethernet MAC)
     que corresponde a una determinada dirección IP. 
     Para ello se envía un paquete (ARP request) a la dirección de difusión de la red 
     (broadcast, MAC = FF FF FF FF FF FF) que contiene la dirección IP por la que se pregunta,
     y se espera a que esa máquina/ota responda (ARP reply) con la dirección Ethernet que le corresponde.
     Cada máquina mantiene una caché con las direcciones traducidas para reducir
     el retardo y la carga. ARP permite a la dirección de Internet ser independiente 
     de la dirección Ethernet, pero esto solo funciona si todas las máquinas lo soportan.
    
* ¿Cuál es el tamaño de paquete de los mismos?
    El tamaño de los paquetes es:
    - RTP 214 bytes.
    - H.261 variable. 
    - RTCP 102 bytes.
    - ARP 42, 60 bytes.
    
* ¿Se utilizan bits de padding?
    No se utilizan bits de padding
    
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la captura 
es en destino)?
    La periodicidad de estos paquetes lo miramos en el campo Timestamp.
     
    Para poder calcular la peridiocidad tenemos que tener en cuenta que se transmite a 64kb/s.
    Como sabemos que el timestamp (160), es decir, que mandaran 50 paquetes de 1280 bits por segundo.
    Por lo tanto, el periodo será 1/50, que es 0.02 segundos.    
    
* ¿Cuántos bits/segundo se envı́an?
    64000 bits/segundo
    
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.

* ¿Cuántos flujos hay? ¿por qué?
    Hay dos flujos, porque uno es para el audio y otro para el video.
    - Payload g711A (para el audio)
    - Payload h261 (para el video)
    
* ¿Cuántos paquetes se pierden?
    No se pierde ningun paquete. 
    Lost 0 (0.0%)
    
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
    El valor maximo del delta es:
    - 1290.444 ms (audio)
    - 1290.479 ms (video)
    
    El valor de delta es el tiempo que pasa entre un paquete y el siguiente.
    
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
    Max Jitter (ms):
        -Src port 5010: 119.635
        -Src port 5014: 183.096
        
        
    Mean Jitter (ms):
        -Src port 5010: 42.500
        -Src port 5014: 153.240
 
13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.

* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
    El delta y el jitter del primer paquete que ha llegado es de 0.00 ms.
    
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Si lo podemos saber, por el número de secuencia y el Marker. 
    En el paquete 113 esta el campo Marker: True, por lo que nos esta indicando
    que se trata del primer paquete.
    
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
    Los valores de jitter son menores de 10ms hasta el paquete 247 que tiene
    un jitter de 38.82ms.
    
* ¿A qué se debe el cambio tan brusco del jitter?
    A que tambien se produce un cambio brusco de la delta
    
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
    Si, es comparable, ya que el jitter varía en función del valor de la delta, que 
    nos da la diferencia de tiempo entre el envío de un paquete y el anterior. 
    En este caso al tener un aumento considerable de la delta el paquete llegará 
    mucho más tarde comparado con los paquetes enviados con anterioridad.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.

* ¿Cuánto dura la conversación?
    La conversacion inicia en el segundo 14.426793 y finaliza en el segundo 39.229683.
    Tiene una duracion de 24.80289 segundos.
    
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    Hay dos SSRC porque hay dos flujos uno para el audio y otro para el video.
        - 0xbf4afd37 (32093622743) g.711A (audio)
        - 0x43306582 (1127245186) H.261 (video)
    No hay CSRCs, valores a 0
       
15. Identifica la trama donde se finaliza la conversación.

* ¿Qué método SIP se utiliza?

* ¿En qué trama(s)?

* ¿Por qué crees que se envı́a varias veces?

16. Finalmente, se cierra la aplicación de VozIP.

* ¿Por qué aparece una instrucción SIP del tipo REGISTER?

* ¿En qué trama sucede esto?

* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :

* ¿Se utilizan DNS y STUN? ¿Por qué?

* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?

* ¿Cuál es su periodicidad?

* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?

* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.

* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

